trigger: none

resources:
  pipelines:
  - pipeline: build
    source: 'Simulation API - BUILD'
  
variables:
  azureSubscription: 'Demo Account'
  resourceGroupName: 'rutzsco-aks-001'
  clusterName: 'aks-rutzsco-aks-001'

stages:

 - stage: CI
   displayName: CI Stage 
   variables:
     kubernetesCluster: 'rutzsco-aks1'
   jobs:
   - deployment: Deploy
     displayName: Deploy
     environment: 'CI'
     pool:
        vmImage: 'ubuntu-latest'   
      
     strategy:
        runOnce:
          deploy:
  
            steps:
            - task: AzureCLI@2
              displayName: 1. Create Namespaces
              inputs:
                azureSubscription:  $(azureSubscription)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az aks get-credentials -n $(clusterName) -g $(resourceGroupName)
                  kubectl apply -f $(Pipeline.Workspace)/build/Infrastructure/AKS/namespace.yaml
                  kubectl apply -f $(Pipeline.Workspace)/build/Infrastructure/AKS/namespace-ingresss.yaml

                  export APPLICATION_VERSION_VALUE=$(resources.pipeline.build.runName)
                  envsubst < $(Pipeline.Workspace)/build/Infrastructure/AKS/deployment.yaml > $(Pipeline.Workspace)/build/Infrastructure/AKS/deployment-output.yaml

            - task: AzureCLI@2
              displayName: 2. Create Ingress Controller
              inputs:
                azureSubscription:  $(azureSubscription)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az aks get-credentials -n $(clusterName) -g $(resourceGroupName)
                  helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
                  helm repo update
                  
                  helm upgrade ingress-nginx ingress-nginx/ingress-nginx \
                  --install \
                  --create-namespace \
                  --namespace simulationservice \
                  --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz

            - task: KubernetesManifest@0
              displayName: 3. Deploy to AKS
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'aks-rutzsco-aks-001'
                namespace: 'simulationservice'
                manifests: '$(Pipeline.Workspace)/build/Infrastructure/AKS/deployment-output.yaml'
                containers: 'rutzscolabcr.azurecr.io/simulation/demo-api:$(resources.pipeline.build.runName)'

            - task: KubernetesManifest@0
              displayName: 4. Deploy Ingress Controller to AKS
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'aks-rutzsco-aks-001'
                namespace: 'simulationservice'
                manifests: '$(Pipeline.Workspace)/build/Infrastructure/AKS/ingress-route.yaml'